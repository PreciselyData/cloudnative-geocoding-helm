###################################################################
## CONFIG | Geo Addressing Application | Regional Addressing Service
###################################################################
## Global configurations will be applicable and referred in every dependent helm chart
## - for more information on global parameter of helm, refer to:
##    https://helm.sh/docs/chart_template_guide/subcharts_and_globals/
global:
  ## Configurations for setting up supported countries.
  ##
  ## This value is referenced in addressing-service sub-charts to create infrastructure for specific countries.
  ##
  ## The value should adhere to the ISO specified format: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Officially_assigned_code_elements
  ##
  ## Additionally, the value should match the data-path installed in the network storage. For example: /verify-geocode/[iso-country]/202307/*
  ##
  ## Following countries are supported as of now:
  ## usa,gbr,deu,aus,fra,can,mex,bra,arg,rus,ind,sgp,nzl,jpn,world
  ##
  ## You can set this parameter to specify the required countries as follows:
  ##    --set "global.countries={usa,aus,fra}"
  countries:
    - usa
    - gbr
    - aus
    - nzl
    - can

  ## Configurations for the addressing-service container image.
  ##
  ## To download container images, please visit the official 'Precisely Data Experience' website:
  ## https://data.precisely.com/products
  addressingImage:
    repository: addressing-service
    pullPolicy: Always
    tag: 3.0.0

  ## Configurations for the express-engine container image.
  ##
  ## To download container images, please visit the official 'Precisely Data Experience' website:
  ## https://data.precisely.com/products
  expressEngineImage:
    repository: express-engine
    tag: 3.0.0
    pullPolicy: Always

  ## Configurations for the express-engine-data-restore container image.
  ##
  ## To download container images, please visit the official 'Precisely Data Experience' website:
  ## https://data.precisely.com/products
  expressEngineDataRestoreImage:
    repository: express-engine-data-restore
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: 3.0.0

  ## Configuration for manually configuring the data mount path for addressing-service
  ## When doing the manual configuration for data mount path, disable the data-vintage
  ## job by setting addressing-hook.enabled=false
  ##
  ## This configuration will be useful if you want to mount a specific data folder for addressing.
  ## Please update the configMapData parameters as required.
  manualDataConfig:
    enabled: false
    nameOverride: addressing-data-mnl-config
    configMapData:
      verify-geocode.usa.vintage: /mnt/data/geoaddressing-data/verify-geocode/usa/202312131538
      reverse.usa.vintage: /mnt/data/geoaddressing-data/verify-geocode/usa/202312131538
      lookup.usa.vintage: /mnt/data/geoaddressing-data/lookup/usa/202312131538
      autocomplete.usa.vintage: /mnt/data/geoaddressing-data/autocomplete/usa/202312131538

  addressingHook:
    ## Create storage class as part of chart
    storageClass:
      enabled: true
      ## external storage class name if not created as part of chart
      name: ~

  addressingExpress:
    ## Create storage class as part of chart
    storageClass:
      enabled: true
      ## external storage class name if not created as part of chart
      name: ~

  ##
  ## Configurations related to Network File System
  nfs:
    ## Create storage class as part of chart
    storageClass:
      enabled: true
      ## external storage class name if not created as part of chart
      name: ~
    ##
    ## The base path where the volume should be mounted inside the container.
    volumeMountPath: /mnt/data/geoaddressing-data
    ##
    ## The base path where the data is present for verify-geocode functionalities.
    ##
    ## [NOTE]: if your data for verify-geocode is not present in the format `verify-geocode/[country]/[timestamp]/[vintage]`, this parameter needs to be overridden.
    addressingBasePath: verify-geocode
    ##
    ## The base path where the data is present for verify-geocode functionality.
    ##
    ## [NOTE]: if your data for autocomplete is not present in the format `autocomplete/[country]/[timestamp]/[vintage]`, this parameter needs to be overridden.
    autoCompleteBasePath: autocomplete
    ##
    ## The base path where the data is present for lookup functionality.
    ##
    ## [NOTE]: if your data for lookup is not present in the format lookup/[country]/[timestamp]/[vintage], this parameter needs to be overridden.
    lookupBasePath: lookup
    ##
    ## The base path where the data is present for reverse-geocode functionality.
    ##
    ## [NOTE]: if your data for reverse-geocode is not present in the format verify-geocode/[country]/[timestamp]/[vintage], this parameter needs to be overridden.
    ##
    ## [NOTE]: the data used for reverse-geocode is the exactly same, that's why the default value is set to verify-geocode.
    reverseBasePath: verify-geocode
    ##
    ## The base path where the data is present for express-engine.
    expressEngineDataMountPath: /usr/share/express_snapshots
    expressEngineBasePath: express_data

  ##
  ## The nodeSelector configs for the regional-addressing pods
  ## - docs for nodeSelector:
  ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  ##
  nodeSelector: { }
  ##
  ## OTEL_EXPORTER_OTLP_ENDPOINT is the endpoint from which otlp traces are collected.
  ## You can replace the value, if jaeger is not being used as trace collector.
  ## For more information, refer to https://opentelemetry.io/docs/concepts/sdk-configuration/otlp-exporter-configuration/
  ## For information related to Jaeger installation, refer to https://github.com/jaegertracing/helm-charts/tree/main/charts/jaeger
  ## Example endpoind http://jaeger-collector.default.svc.cluster.local:4317
  otelExporterEndpoint: ""

enabled: ~
## The number of regional-addressing pods to run
replicaCount: 1

## Configuration for the regional-addressing-service container image.
##
## - Please visit the official 'Precisely Data Experience' website to download container images:
##   https://data.precisely.com/products
image:
  repository: regional-addressing-service
  pullPolicy: Always
  tag: 3.0.0
imagePullSecrets: [ ]

## This will override the name of the installed regional-addressing deployment.
nameOverride: "regional-addressing"
fullnameOverride: "regional-addressing"

## A service account will be created by default.
serviceAccount:
  create: true
  annotations: { }
  name: ""

# container level lifecycle hooks
containerLifecycleHooks: {}

## podAnnotations for regional-addressing deployments
podAnnotations: { }

podLabels: {}

## The security context for the regional-addressing Pods
## - spec for PodSecurityContext:
##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core
##
podSecurityContext: { }
securityContext: { }

# This is the max unavailable setting for the pod disruption budget
# The default value of 1 will make sure that kubernetes won't allow more than 1
# of your pods to be unavailable during maintenance
maxUnavailable: 1

## Configs for the service of the regional-addressing deployment
service:
  type: ClusterIP
  port: 80


###################################
## CONFIG | Kubernetes Ingress
###################################
ingress:
  ## By default, ingress is disabled for regional-addressing service
  enabled: false
  ## The Ingress Class for the web Ingress
  ## - [WARNING] requires Kubernetes 1.18 or later, use "kubernetes.io/ingress.class" annotation for older versions
  className: "nginx"
  ## Annotations for the Ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  hosts:
    ## The host for the Ingress
    ## [WARNING] Do NOT provide regex while providing path, it's already handled in the ingress.yaml
    ## ____ EXAMPLE _______________
    ##   # webserver URL: geoaddressing.precisely.com
    ##   # path: "/precisely/addressing"
    ##
    - host: geoaddressing.precisely.com
      paths:
        - path: /precisely/addressing
          pathType: ImplementationSpecific
  tls: [ ]

## Resource requests/limits for the regional-addressing pods
## - spec for ResourceRequirements:
##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
##
## The default recommended resources requests for regional-addressing service is:
##    requests:
##      cpu: 1
##      memory: 2Gi
resources:
  requests:
    cpu: 1
    memory: 2Gi
  limits:
    memory: 2Gi

## Configurations for the HorizontalPodAutoscaler of the regional-addressing pods
##
## [WARNING]: To ensure efficient operation of the HorizontalPodAutoscaler, you must have the Metrics API server
## installed in your Kubernetes Cluster.
##
## To install the Metrics API server, please use the following command:
## `kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml`
##
## For the regional-addressing service, autoscaling is enabled by default to handle large workloads.
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 60

## The toleration configs for the regional-addressing pods
## - spec for Toleration:
##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core
##
tolerations: [ ]

## the affinity configs for the regional-addressing pods
## - spec for Affinity:
##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core
##
affinity: { }

## addressing-hook is used to identify the latest vintage of reference data to mount to the addressing containers.
## In case, if you want to provide a specific reference data vintage, use the `global.manualDataConfig` parameters and disable addressing-hook.
addressing-hook:
## Config for enabling or disabling `data-vintage` job hook.
  enabled: true
  ## Create storage class as part of chart
  storageClass:
    enabled: true
    ## external storage class name if not created as part of chart
    name: ~

################################################
## CONFIG | Autocomplete Express Functionalities
################################################
##
## config related to addressing-express helm chart.
## This helm chart is required if you want to enable addressing express capabilities in your addressing infrastructure.
## This service is needed for enabling Geocoding without country.
addressing-express:
  enable: true

  ## Create storage class as part of chart
  storageClass:
    enabled: true
    ## external storage class name if not created as part of chart
    name: ~

  ## number of replicas for addressing-express pods.
  replicaCount: 1
  imagePullSecrets: [ ]
  ## service account will be created by default for addressing-express deployment.
  serviceAccount:
    create: true
    annotations: { }
    name: ""
  ## pod annotations for addressing-express pods
  podAnnotations: { }
  ## the security context for the addressing-express Pods
  ## - spec for PodSecurityContext:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core
  ##
  podSecurityContext: { }
  securityContext: { }
  # This is the max unavailable setting for the pod disruption budget
  # The default value of 1 will make sure that kubernetes won't allow more than 1
  # of your pods to be unavailable during maintenance
  maxUnavailable: 1
  ## the toleration configs for the addressing-express pods
  ## - spec for Toleration:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core
  ##
  tolerations: [ ]
  ## the affinity configs for the autocomplete pods
  ## - spec for Affinity:
  ##    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core
  ##
  affinity: { }
  ##
  ## Autoscaling configs
  ## By default, minimum replicas are set to 1 and maximum to 10
  ## You can override this parameter as follows:
  # --set "addressing-express.autoscaling.minReplicas=10"
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 50

  resources:
    requests:
      cpu: 2
      memory: 4Gi

  ###########################################
  ## CONFIG | Express Engine Data Restore Job
  ## Use this job to allow loading the data
  ## for addressing-express service
  ###########################################
  expressEngineDataRestore:
    ##
    ## The nodeSelector configs for the express-engine-data-restore job
    ## - docs for nodeSelector:
    ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
    ##
    ## Note: This should be an arm based cluster node group
    nodeSelector: { }

    ##
    ## Flag to allow reload of express engine data
    ## Note: This will delete all existing data from the cluster and reload it
    allowDataReload: false

    ##
    ## Manual data vintage configuration for express engine data
    ## Note: Manual data vintage configuration overrides the automatic data vintage configuration
    dataConfig:
      # expressConfig.json: |
      #   {
      #     "nzl": {
      #         "addressing": {
      #             "path": {{printf "%s/%s/%s" .Values.global.nfs.expressEngineDataMountPath .Values.global.nfs.expressEngineBasePath "addressing/nzl/202312" | quote}},
      #             "vintage": "202312"
      #         }
      #     },
      #     "usa": {
      #         "addressing": {
      #             "path": {{printf "%s/%s/%s" .Values.global.nfs.expressEngineDataMountPath .Values.global.nfs.expressEngineBasePath "addressing/usa/202309" | quote}},
      #             "vintage": "202309"
      #         }
      #     }
      #   }

  expressEngineData:

    autoscaling:
      ## Keep this enabled
      enabled: true
      ##
      ## Warning: Do not reduce the count of minReplicas on helm upgrade. This will lead to data loss
      ##
      minReplicas: 3
      maxReplicas: 20

      targetCPUUtilizationPercentage: 50

    ##
    ## The nodeSelector configs for the express-engine-data service
    ## - docs for nodeSelector:
    ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
    ##
    ## Note: This should be an arm based cluster node group
    nodeSelector: {}

    ##
    ## Should be 50% of the memory
    ##
    expressEngineJavaOpts: "-Xmx16G -Xms16G"

    # This is the max unavailable setting for the pod disruption budget
    # The default value of 1 will make sure that kubernetes won't allow more than 1
    # of your pods to be unavailable during maintenance
    maxUnavailable: 1

    ##
    ## This is the minimum resources required
    ##
    resources:
      requests:
        cpu: 16
        memory: 32Gi

  expressEngineMaster:

    ##
    ## Warning: Do not reduce the count of replicas on helm upgrade. This will lead to data loss
    ##
    replicas: 3

    ##
    ## The nodeSelector configs for the express-engine-master service
    ## - docs for nodeSelector:
    ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
    ##
    ## Note: This should be an arm based cluster node group
    nodeSelector: {}

    ##
    ## Should be 50% of the memory
    ##
    expressEngineJavaOpts: "-Xmx3G -Xms3G"

    # This is the max unavailable setting for the pod disruption budget
    # The default value of 1 will make sure that kubernetes won't allow more than 1
    # of your pods to be unavailable during maintenance
    maxUnavailable: 1

    ##
    ## This is the minimum resources required
    ##
    resources:
      requests:
        cpu: 2
        memory: 6Gi
      limits:
        cpu: 4
        memory: 6Gi


###################################
## CONFIG | Addressing Functionalities
###################################
##
## Configurations related to addressing-svc helm chart.
## This helm chart is required if you want to enable verify-geocode capabilities in your addressing infrastructure.
addressing-svc:
  ## Config for enabling or disabling `verify-geocode` capabilities.
  enabled: true
  ## Number of replicas for addressing pods.
  replicaCount: 1
  imagePullSecrets: [ ]
  ## Service account will be created by default for addressing deployment.
  serviceAccount:
    create: true
    annotations: { }
    name: ""
  ## Pod annotations for addressing pods
  podAnnotations: { }
  ## The security context for the addressing Pods
  ## - spec for PodSecurityContext:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core
  ##
  podSecurityContext: { }
  # This is the max unavailable setting for the pod disruption budget
  # The default value of 1 will make sure that kubernetes won't allow more than 1
  # of your pods to be unavailable during maintenance
  maxUnavailable: 1
  securityContext: { }
  ## The toleration configs for the addressing pods
  ## - spec for Toleration:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core
  ##
  tolerations: [ ]
  ## The affinity configs for the addressing pods
  ## - spec for Affinity:
  ##    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core
  ##
  affinity: { }
  ##
  ## Autoscaling configs
  ## By default, minimum replicas are set to 1 and maximum to 10
  ## You can override this parameter as follows:
  # --set "addressing-svc.autoscaling.minReplicas=10"
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
  ##
  ## Country-specific configurations for addressing pods of the `verify-geocode` capability.
  ## You can specify country-specific configurations, such as resource requests, nodeSelector, and thread pool sizes.
  ## Follow the table below for country-specific recommendations:
  ##
  ## #########################################
  ## COUNTRY   Recommended CPU, Memory Requests
  ## #########################################
  ##  USA       1000m, 8Gi
  ##  AUS       1000m, 6Gi
  ##  CAN       1000m, 6Gi
  ##  GBR       1000m, 6Gi
  ##  DEU       1000m, 6Gi
  ##  NZL       1000m, 10Gi
  ##  FRA       1000m, 7Gi
  ##
  ## [NOTE]: These configurations are recommended after testing scenarios in a production environment for the Geo Addressing application.
  ##
  ## If a country-specific configuration is not provided, the default configurations will be used.
  ## For example, to provide configurations related to [CAN], use the following block or configurations like [USA]:
  ##
  ##  can:
  ##      resources:
  ##        requests:
  ##          cpu: 1000m
  ##          memory: 6Gi
  ##      nodeSelector: {}
  ##
  ## You can also set the parameters for a country in the Helm chart like this:
  ##
  ##  --set "addressing-svc.countryConfigurations.can.resources.requests.cpu=1000m"
  ##  --set "addressing-svc.countryConfigurations.can.resources.requests.memory=6Gi"
  ##  --set "addressing-svc.countryConfigurations.can.nodeSelector.node-app=geo-addressing"
  countryConfigurations:
    default:
      resources:
        requests:
          cpu: 1
          memory: 8Gi
        limits:
          memory: 8Gi
    usa:
      resources:
        requests:
          cpu: 1
          memory: 8Gi
        limits:
          memory: 8Gi

###################################
## CONFIG | Autocomplete Functionalities
###################################
##
## config related to autocomplete-svc helm chart.
## this helm chart is required if you want to enable autocomplete capabilities in your addressing infrastructure.
autocomplete-svc:
  ## config for enabling or disabling `autocomplete` capabilities.
  enabled: false
  ## number of replicas for autocomplete pods.
  replicaCount: 1
  imagePullSecrets: [ ]
  ## service account will be created by default for autocomplete deployment.
  serviceAccount:
    create: true
    annotations: { }
    name: ""
  ## pod annotations for autocomplete pods
  podAnnotations: { }
  ## the security context for the autocomplete Pods
  ## - spec for PodSecurityContext:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core
  ##
  podSecurityContext: { }
  # This is the max unavailable setting for the pod disruption budget
  # The default value of 1 will make sure that kubernetes won't allow more than 1
  # of your pods to be unavailable during maintenance
  maxUnavailable: 1
  securityContext: { }
  ## the toleration configs for the autocomplete pods
  ## - spec for Toleration:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core
  ##
  tolerations: [ ]
  ## the affinity configs for the autocomplete pods
  ## - spec for Affinity:
  ##    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core
  ##
  affinity: { }
  ##
  ## Autoscaling configs
  ## By default, minimum replicas are set to 1 and maximum to 10
  ## You can override this parameter as follows:
  # --set "autocomplete-svc.autoscaling.minReplicas=10"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
  ##
  ## Country-specific configurations for autocomplete pods of the `autocomplete` capability.
  ## You can specify country-specific configurations, such as resource requests, nodeSelector, and thread pool sizes.
  ## Follow the table below for country-specific recommendations:
  ##
  ## #########################################
  ## COUNTRY   Recommended CPU, Memory Requests
  ## #########################################
  ##  USA       1000m, 6Gi
  ##  AUS       1000m, 8Gi
  ##  CAN       1000m, 4Gi
  ##  GBR       1000m, 6Gi
  ##  DEU       1000m, 6Gi
  ##  NZL       1000m, 8Gi
  ##  FRA       1000m, 6Gi
  ##
  ## [NOTE]: These configurations are recommended after testing scenarios in a production environment for the Geo Addressing application.
  ##
  ## If a country-specific configuration is not provided, the default configurations will be used.
  ## For example, to provide configurations related to [CAN], use the following block or configurations like [USA]:
  ##
  ##  can:
  ##      resources:
  ##        requests:
  ##          cpu: 1000m
  ##          memory: 6Gi
  ##      nodeSelector: {}
  ##
  ## You can also set the parameters for a country in the Helm chart like this:
  ##
  ##  --set "autocomplete-svc.countryConfigurations.can.resources.requests.cpu=1000m"
  ##  --set "autocomplete-svc.countryConfigurations.can.resources.requests.memory=6Gi"
  ##  --set "autocomplete-svc.countryConfigurations.can.nodeSelector.node-app=geo-addressing"
  ##
  countryConfigurations:
    default:
      resources:
        requests:
          cpu: 1
          memory: 6Gi
        limits:
          memory: 6Gi
    usa:
      resources:
        requests:
          cpu: 1
          memory: 6Gi
        limits:
          memory: 6Gi

###################################
## CONFIG | Look Functionalities
###################################
##
## config related to lookup-svc helm chart.
## this helm chart is required if you want to enable lookup capabilities in your addressing infrastructure.
lookup-svc:
  ## config for enabling or disabling `lookup` capabilities.
  enabled: false
  ## number of replicas for lookup pods.
  replicaCount: 1
  imagePullSecrets: [ ]
  ## service account will be created by default for lookup deployment.
  serviceAccount:
    create: true
    annotations: { }
    name: ""
  ## pod annotations for lookup pods
  podAnnotations: { }
  ## the security context for the lookup Pods
  ## - spec for PodSecurityContext:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core
  ##
  podSecurityContext: { }
  # This is the max unavailable setting for the pod disruption budget
  # The default value of 1 will make sure that kubernetes won't allow more than 1
  # of your pods to be unavailable during maintenance
  maxUnavailable: 1
  securityContext: { }
  ## the toleration configs for the lookup pods
  ## - spec for Toleration:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core
  ##
  tolerations: [ ]
  ## the affinity configs for the lookup pods
  ## - spec for Affinity:
  ##    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core
  ##
  affinity: { }
  ##
  ## Autoscaling configs
  ## By default, minimum replicas are set to 1 and maximum to 10
  ## You can override this parameter as follows:
  # --set "lookup-svc.autoscaling.minReplicas=10"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
  ##
  ## Country-specific configurations for lookup pods of the `lookup` capability.
  ## You can specify country-specific configurations, such as resource requests, nodeSelector, and thread pool sizes.
  ## Follow the table below for country-specific recommendations:
  ##
  ## #########################################
  ## COUNTRY   Recommended CPU, Memory Requests
  ## #########################################
  ##  USA       1000m, 6Gi
  ##  AUS       1000m, 6Gi
  ##  CAN       1000m, 6Gi
  ##  GBR       1000m, 6Gi
  ##  DEU       1000m, 6Gi
  ##  NZL       1000m, 6Gi
  ##  FRA       1000m, 6Gi
  ##
  ## [NOTE]: These configurations are recommended after testing scenarios in a production environment for the Geo Addressing application.
  ##
  ## If a country-specific configuration is not provided, the default configurations will be used.
  ## For example, to provide configurations related to [CAN], use the following block or configurations like [USA]:
  ##
  ##  can:
  ##      resources:
  ##        requests:
  ##          cpu: 1000m
  ##          memory: 6Gi
  ##      nodeSelector: {}
  ##
  ## You can also set the parameters for a country in the Helm chart like this:
  ##
  ##  --set "lookup-svc.countryConfigurations.can.resources.requests.cpu=1000m"
  ##  --set "lookup-svc.countryConfigurations.can.resources.requests.memory=6Gi"
  ##  --set "lookup-svc.countryConfigurations.can.nodeSelector.node-app=geo-addressing"
  ##
  countryConfigurations:
    default:
      resources:
        requests:
          cpu: 1
          memory: 6Gi
        limits:
          memory: 6Gi
    usa:
      resources:
        requests:
          cpu: 1
          memory: 6Gi
        limits:
          memory: 6Gi


###################################
## CONFIG | Reverse-Geocode Functionalities
###################################
##
## config related to reverse-svc helm chart.
## this helm chart is required if you want to enable reverse-geocode capabilities in your addressing infrastructure.
reverse-svc:
  ## config for enabling or disabling `reverse-geocode` capabilities.
  enabled: false
  ## number of replicas for reverse-geocode pods.
  replicaCount: 1
  imagePullSecrets: [ ]
  ## service account will be created by default for reverse-geocode deployment.
  serviceAccount:
    create: true
    annotations: { }
    name: ""
  ## pod annotations for reverse-geocode pods
  podAnnotations: { }
  ## the security context for the reverse-geocode Pods
  ## - spec for PodSecurityContext:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core
  ##
  podSecurityContext: { }
  # This is the max unavailable setting for the pod disruption budget
  # The default value of 1 will make sure that kubernetes won't allow more than 1
  # of your pods to be unavailable during maintenance
  maxUnavailable: 1
  securityContext: { }
  ## the toleration configs for the reverse-geocode pods
  ## - spec for Toleration:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core
  ##
  tolerations: [ ]
  ## the affinity configs for the reverse-geocode pods
  ## - spec for Affinity:
  ##    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core
  ##
  affinity: { }
  ##
  ## Autoscaling configs
  ## By default, minimum replicas are set to 1 and maximum to 10
  ## You can override this parameter as follows:
  # --set "reverse-svc.autoscaling.minReplicas=10"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
  ##
  ## Country-specific configurations for reverse-geocode pods of the `reverse-geocode` capability.
  ## You can specify country-specific configurations, such as resource requests, nodeSelector, and thread pool sizes.
  ## Follow the table below for country-specific recommendations:
  ##
  ## #########################################
  ## COUNTRY   Recommended CPU, Memory Requests
  ## #########################################
  ##  USA       1000m, 8Gi
  ##  AUS       1000m, 6Gi
  ##  CAN       1000m, 6Gi
  ##  GBR       1000m, 6Gi
  ##  DEU       1000m, 6Gi
  ##  NZL       1000m, 10Gi
  ##  FRA       1000m, 7Gi
  ##
  ## [NOTE]: These configurations are recommended after testing scenarios in a production environment for the Geo Addressing application.
  ##
  ## If a country-specific configuration is not provided, the default configurations will be used.
  ## For example, to provide configurations related to [CAN], use the following block or configurations like [USA]:
  ##
  ##  can:
  ##      resources:
  ##        requests:
  ##          cpu: 1000m
  ##          memory: 6Gi
  ##      nodeSelector: {}
  ##
  ## You can also set the parameters for a country in the Helm chart like this:
  ##
  ##  --set "reverse-svc.countryConfigurations.can.resources.requests.cpu=1000m"
  ##  --set "reverse-svc.countryConfigurations.can.resources.requests.memory=6Gi"
  ##  --set "reverse-svc.countryConfigurations.can.nodeSelector.node-app=geo-addressing"
  countryConfigurations:
    default:
      resources:
        requests:
          cpu: 1
          memory: 8Gi
        limits:
          memory: 8Gi
    usa:
      resources:
        requests:
          cpu: 1
          memory: 8Gi
        limits:
          memory: 8Gi